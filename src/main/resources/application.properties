spring.application.name=movieSite
# Connection to the database
spring.datasource.url=jdbc:postgresql://localhost:5432/mydatabase
spring.datasource.username=myuser
spring.datasource.password=mypassword
spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true  # Formatowanie SQL

# Security for API
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8081/realms/myRealm
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8081/realms/myRealm/protocol/openid-connect/certs

# Security for Web
# Spring Security OAuth2 - Keycloak as Authorization Server
spring.security.oauth2.client.registration.keycloak.client-id=mySpringBootApplication
spring.security.oauth2.client.registration.keycloak.client-secret=GCApcM0dDkVRWCpVmdQuxTSWIsfz2nBn
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:8080/login/oauth2/code/keycloak
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email,roles

spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8081/realms/myRealm
spring.security.oauth2.client.provider.keycloak.user-info-uri=http://localhost:8081/realms/myRealm/protocol/openid-connect/userinfo
